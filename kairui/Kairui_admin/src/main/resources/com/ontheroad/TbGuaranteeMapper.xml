<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ontheroad.dao.TbGuaranteeMapper">
  <resultMap id="BaseResultMap" type="com.ontheroad.entity.TbGuarantee">
    <id column="guarantee_id" jdbcType="INTEGER" property="guaranteeId" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="productNumber" jdbcType="VARCHAR" property="productnumber" />
    <result column="buyTime" jdbcType="TIMESTAMP" property="buytime" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="invoice" jdbcType="VARCHAR" property="invoice" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
   <resultMap id="BaseResultMap2" type="com.ontheroad.dto.TbGuranteeDto">
    <id column="guarantee_id" jdbcType="INTEGER" property="guaranteeId" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="productNumber" jdbcType="VARCHAR" property="productnumber" />
    <result column="buyTime" jdbcType="TIMESTAMP" property="buytime" />
    <result column="guaranteeTime" jdbcType="VARCHAR" property="guaranteetime" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="invoice" jdbcType="VARCHAR" property="invoice" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="equipment_num" jdbcType="VARCHAR" property="equipmentNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    guarantee_id, equipment_id, user_id, model, productNumber, buyTime, guaranteeTime, 
    phone, area, address, invoice, status, remark
  </sql>
  <select id="selectByExample" parameterType="com.ontheroad.entity.TbGuaranteeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_guarantee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_guarantee
    where guarantee_id = #{guaranteeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_guarantee
    where guarantee_id = #{guaranteeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ontheroad.entity.TbGuaranteeExample">
    delete from tb_guarantee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ontheroad.entity.TbGuarantee">
    <selectKey keyProperty="guaranteeId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_guarantee (equipment_id, user_id, model, 
      productNumber, buyTime, guaranteeTime, 
      phone, area, address, 
      invoice, status, remark
      )
    values (#{equipmentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{model,jdbcType=VARCHAR}, 
      #{productnumber,jdbcType=VARCHAR}, #{buytime,jdbcType=TIMESTAMP}, #{guaranteetime,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{invoice,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ontheroad.entity.TbGuarantee">
    <selectKey keyProperty="guaranteeId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_guarantee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="productnumber != null">
        productNumber,
      </if>
      <if test="buytime != null">
        buyTime,
      </if>
      <if test="guaranteetime != null">
        guaranteeTime,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="invoice != null">
        invoice,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="productnumber != null">
        #{productnumber,jdbcType=VARCHAR},
      </if>
      <if test="buytime != null">
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="guaranteetime != null">
        #{guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null">
        #{invoice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ontheroad.entity.TbGuaranteeExample" resultType="java.lang.Integer">
    select count(*) from tb_guarantee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_guarantee
    <set>
      <if test="record.guaranteeId != null">
        guarantee_id = #{record.guaranteeId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.productnumber != null">
        productNumber = #{record.productnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.buytime != null">
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.guaranteetime != null">
        guaranteeTime = #{record.guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.invoice != null">
        invoice = #{record.invoice,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_guarantee
    set guarantee_id = #{record.guaranteeId,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      model = #{record.model,jdbcType=VARCHAR},
      productNumber = #{record.productnumber,jdbcType=VARCHAR},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      guaranteeTime = #{record.guaranteetime,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      invoice = #{record.invoice,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ontheroad.entity.TbGuarantee">
    update tb_guarantee
    <set>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="productnumber != null">
        productNumber = #{productnumber,jdbcType=VARCHAR},
      </if>
      <if test="buytime != null">
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="guaranteetime != null">
        guaranteeTime = #{guaranteetime,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null">
        invoice = #{invoice,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where guarantee_id = #{guaranteeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ontheroad.entity.TbGuarantee">
    update tb_guarantee
    set equipment_id = #{equipmentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      model = #{model,jdbcType=VARCHAR},
      productNumber = #{productnumber,jdbcType=VARCHAR},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      guaranteeTime = #{guaranteetime,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      invoice = #{invoice,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where guarantee_id = #{guaranteeId,jdbcType=INTEGER}
  </update>
  
  <!-- 保修卡列表 -->
    <select id="selectByExample2" parameterType="com.ontheroad.dto.TbGuranteeDto" resultMap="BaseResultMap2">
    SELECT 
    tg.*,te.equipmentNum,te.type,te.product
    FROM tb_guarantee tg
    LEFT JOIN tb_equipment te ON tg.`equipment_id`=te.`equipment_id`
   <!--  LEFT JOIN `tb_user` tu ON tu.`user_id`=te.`user_id` -->
    WHERE 1=1
    <if test="status != null and status!=''">
       and tg.status = #{status,jdbcType=INTEGER}
      </if>
     <if test="equipmentNum != null and equipmentNum!=''">
       and equipment_num = #{equipmentNum,jdbcType=VARCHAR}
      </if>
      <if test="phone != null and phone!=''">
       and phone = #{phone,jdbcType=VARCHAR}
      </if>
  </select>
</mapper>