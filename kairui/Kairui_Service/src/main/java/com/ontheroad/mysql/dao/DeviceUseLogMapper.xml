<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ontheroad.mysql.dao.DeviceUseLogMapper">
  <resultMap id="BaseResultMap" type="com.ontheroad.mysql.entity.DeviceUseLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <result column="uploadStatus" jdbcType="VARCHAR" property="uploadstatus" />
    <result column="useType" jdbcType="VARCHAR" property="usetype" />
    <result column="valveOutTemperature" jdbcType="VARCHAR" property="valveouttemperature" />
    <result column="setTemperature" jdbcType="VARCHAR" property="settemperature" />
    <result column="bufferTemperature" jdbcType="VARCHAR" property="buffertemperature" />
    <result column="outTemperature" jdbcType="VARCHAR" property="outtemperature" />
    <result column="flowGrade" jdbcType="VARCHAR" property="flowgrade" />
    <result column="flowSpeed" jdbcType="VARCHAR" property="flowspeed" />
    <result column="batteryVoltage" jdbcType="VARCHAR" property="batteryvoltage" />
    <result column="batteryTemperature" jdbcType="VARCHAR" property="batterytemperature" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="s_work_status" jdbcType="VARCHAR" property="sWorkStatus" />
    <result column="hot_water_temp" jdbcType="VARCHAR" property="hotWaterTemp" />
    <result column="code_water_temp" jdbcType="VARCHAR" property="codeWaterTemp" />
    <result column="time_type" jdbcType="VARCHAR" property="timeType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, equipment_id, uploadStatus, useType, valveOutTemperature, setTemperature, bufferTemperature, 
    outTemperature, flowGrade, flowSpeed, batteryVoltage, batteryTemperature, create_time, 
    s_work_status, hot_water_temp, code_water_temp, time_type
  </sql>
  <select id="selectByExample" parameterType="com.ontheroad.mysql.entity.DeviceUseLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_use_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_use_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device_use_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ontheroad.mysql.entity.DeviceUseLogExample">
    delete from device_use_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ontheroad.mysql.entity.DeviceUseLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_use_log (equipment_id, uploadStatus, useType, 
      valveOutTemperature, setTemperature, bufferTemperature, 
      outTemperature, flowGrade, flowSpeed, 
      batteryVoltage, batteryTemperature, create_time, 
      s_work_status, hot_water_temp, code_water_temp, 
      time_type)
    values (#{equipmentId,jdbcType=INTEGER}, #{uploadstatus,jdbcType=VARCHAR}, #{usetype,jdbcType=VARCHAR}, 
      #{valveouttemperature,jdbcType=VARCHAR}, #{settemperature,jdbcType=VARCHAR}, #{buffertemperature,jdbcType=VARCHAR}, 
      #{outtemperature,jdbcType=VARCHAR}, #{flowgrade,jdbcType=VARCHAR}, #{flowspeed,jdbcType=VARCHAR}, 
      #{batteryvoltage,jdbcType=VARCHAR}, #{batterytemperature,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{sWorkStatus,jdbcType=VARCHAR}, #{hotWaterTemp,jdbcType=VARCHAR}, #{codeWaterTemp,jdbcType=VARCHAR}, 
      #{timeType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ontheroad.mysql.entity.DeviceUseLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_use_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="uploadstatus != null">
        uploadStatus,
      </if>
      <if test="usetype != null">
        useType,
      </if>
      <if test="valveouttemperature != null">
        valveOutTemperature,
      </if>
      <if test="settemperature != null">
        setTemperature,
      </if>
      <if test="buffertemperature != null">
        bufferTemperature,
      </if>
      <if test="outtemperature != null">
        outTemperature,
      </if>
      <if test="flowgrade != null">
        flowGrade,
      </if>
      <if test="flowspeed != null">
        flowSpeed,
      </if>
      <if test="batteryvoltage != null">
        batteryVoltage,
      </if>
      <if test="batterytemperature != null">
        batteryTemperature,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sWorkStatus != null">
        s_work_status,
      </if>
      <if test="hotWaterTemp != null">
        hot_water_temp,
      </if>
      <if test="codeWaterTemp != null">
        code_water_temp,
      </if>
      <if test="timeType != null">
        time_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="uploadstatus != null">
        #{uploadstatus,jdbcType=VARCHAR},
      </if>
      <if test="usetype != null">
        #{usetype,jdbcType=VARCHAR},
      </if>
      <if test="valveouttemperature != null">
        #{valveouttemperature,jdbcType=VARCHAR},
      </if>
      <if test="settemperature != null">
        #{settemperature,jdbcType=VARCHAR},
      </if>
      <if test="buffertemperature != null">
        #{buffertemperature,jdbcType=VARCHAR},
      </if>
      <if test="outtemperature != null">
        #{outtemperature,jdbcType=VARCHAR},
      </if>
      <if test="flowgrade != null">
        #{flowgrade,jdbcType=VARCHAR},
      </if>
      <if test="flowspeed != null">
        #{flowspeed,jdbcType=VARCHAR},
      </if>
      <if test="batteryvoltage != null">
        #{batteryvoltage,jdbcType=VARCHAR},
      </if>
      <if test="batterytemperature != null">
        #{batterytemperature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sWorkStatus != null">
        #{sWorkStatus,jdbcType=VARCHAR},
      </if>
      <if test="hotWaterTemp != null">
        #{hotWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="codeWaterTemp != null">
        #{codeWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="timeType != null">
        #{timeType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ontheroad.mysql.entity.DeviceUseLogExample" resultType="java.lang.Integer">
    select count(*) from device_use_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_use_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.uploadstatus != null">
        uploadStatus = #{record.uploadstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.usetype != null">
        useType = #{record.usetype,jdbcType=VARCHAR},
      </if>
      <if test="record.valveouttemperature != null">
        valveOutTemperature = #{record.valveouttemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.settemperature != null">
        setTemperature = #{record.settemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.buffertemperature != null">
        bufferTemperature = #{record.buffertemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.outtemperature != null">
        outTemperature = #{record.outtemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.flowgrade != null">
        flowGrade = #{record.flowgrade,jdbcType=VARCHAR},
      </if>
      <if test="record.flowspeed != null">
        flowSpeed = #{record.flowspeed,jdbcType=VARCHAR},
      </if>
      <if test="record.batteryvoltage != null">
        batteryVoltage = #{record.batteryvoltage,jdbcType=VARCHAR},
      </if>
      <if test="record.batterytemperature != null">
        batteryTemperature = #{record.batterytemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sWorkStatus != null">
        s_work_status = #{record.sWorkStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.hotWaterTemp != null">
        hot_water_temp = #{record.hotWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="record.codeWaterTemp != null">
        code_water_temp = #{record.codeWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="record.timeType != null">
        time_type = #{record.timeType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_use_log
    set id = #{record.id,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      uploadStatus = #{record.uploadstatus,jdbcType=VARCHAR},
      useType = #{record.usetype,jdbcType=VARCHAR},
      valveOutTemperature = #{record.valveouttemperature,jdbcType=VARCHAR},
      setTemperature = #{record.settemperature,jdbcType=VARCHAR},
      bufferTemperature = #{record.buffertemperature,jdbcType=VARCHAR},
      outTemperature = #{record.outtemperature,jdbcType=VARCHAR},
      flowGrade = #{record.flowgrade,jdbcType=VARCHAR},
      flowSpeed = #{record.flowspeed,jdbcType=VARCHAR},
      batteryVoltage = #{record.batteryvoltage,jdbcType=VARCHAR},
      batteryTemperature = #{record.batterytemperature,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      s_work_status = #{record.sWorkStatus,jdbcType=VARCHAR},
      hot_water_temp = #{record.hotWaterTemp,jdbcType=VARCHAR},
      code_water_temp = #{record.codeWaterTemp,jdbcType=VARCHAR},
      time_type = #{record.timeType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ontheroad.mysql.entity.DeviceUseLog">
    update device_use_log
    <set>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="uploadstatus != null">
        uploadStatus = #{uploadstatus,jdbcType=VARCHAR},
      </if>
      <if test="usetype != null">
        useType = #{usetype,jdbcType=VARCHAR},
      </if>
      <if test="valveouttemperature != null">
        valveOutTemperature = #{valveouttemperature,jdbcType=VARCHAR},
      </if>
      <if test="settemperature != null">
        setTemperature = #{settemperature,jdbcType=VARCHAR},
      </if>
      <if test="buffertemperature != null">
        bufferTemperature = #{buffertemperature,jdbcType=VARCHAR},
      </if>
      <if test="outtemperature != null">
        outTemperature = #{outtemperature,jdbcType=VARCHAR},
      </if>
      <if test="flowgrade != null">
        flowGrade = #{flowgrade,jdbcType=VARCHAR},
      </if>
      <if test="flowspeed != null">
        flowSpeed = #{flowspeed,jdbcType=VARCHAR},
      </if>
      <if test="batteryvoltage != null">
        batteryVoltage = #{batteryvoltage,jdbcType=VARCHAR},
      </if>
      <if test="batterytemperature != null">
        batteryTemperature = #{batterytemperature,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sWorkStatus != null">
        s_work_status = #{sWorkStatus,jdbcType=VARCHAR},
      </if>
      <if test="hotWaterTemp != null">
        hot_water_temp = #{hotWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="codeWaterTemp != null">
        code_water_temp = #{codeWaterTemp,jdbcType=VARCHAR},
      </if>
      <if test="timeType != null">
        time_type = #{timeType,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ontheroad.mysql.entity.DeviceUseLog">
    update device_use_log
    set equipment_id = #{equipmentId,jdbcType=INTEGER},
      uploadStatus = #{uploadstatus,jdbcType=VARCHAR},
      useType = #{usetype,jdbcType=VARCHAR},
      valveOutTemperature = #{valveouttemperature,jdbcType=VARCHAR},
      setTemperature = #{settemperature,jdbcType=VARCHAR},
      bufferTemperature = #{buffertemperature,jdbcType=VARCHAR},
      outTemperature = #{outtemperature,jdbcType=VARCHAR},
      flowGrade = #{flowgrade,jdbcType=VARCHAR},
      flowSpeed = #{flowspeed,jdbcType=VARCHAR},
      batteryVoltage = #{batteryvoltage,jdbcType=VARCHAR},
      batteryTemperature = #{batterytemperature,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      s_work_status = #{sWorkStatus,jdbcType=VARCHAR},
      hot_water_temp = #{hotWaterTemp,jdbcType=VARCHAR},
      code_water_temp = #{codeWaterTemp,jdbcType=VARCHAR},
      time_type = #{timeType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>