<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
     
  
	
		<!-- 配置druid数据源 -->
	<bean id="kamailiodataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="${jdbc.url}" />
	      <property name="username" value="${jdbc.username}" />
	      <property name="password" value="${jdbc.password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="150" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="60000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <property name="validationQuery" value="SELECT 'x'" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	      
	   <!--    <property name="removeAbandoned" value="true" /> 打开removeAbandoned功能
    <property name="removeAbandonedTimeout" value="1800" /> 1800秒，也就是30分钟
    <property name="logAbandoned" value="true" /> 关闭abanded连接时输出错误日志 -->
	
	      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="false" /><!-- 
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
	
	      <!-- 配置监控统计拦截的filters -->
	      <property name="filters" value="stat" />
	</bean> 
	
    
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="kamailiodataSource" />
		
		<!--加载mybaties-plugin中的配置文件 -->
		<property name="configLocation" value="classpath:mybatis-plugin-config.xml" />
	</bean>
	
	
	<!--数据源事物管理 -->
	<!-- <bean id="kamailioTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="kamailiodataSource" /> 
        <qualifier value="core" />  
	</bean>
	
	<bean id="transactionTemplate"  class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager">  <ref local="kamailioTransactionManager" />  
        </property>  
        ISOLATION_DEFAULT 表示由使用的数据库决定   
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>  
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
        <property name="timeout" value="30"/>  
    </bean> -->
      <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="kamailiodataSource"/>
    </bean>
    <!-- 声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- 编程式事务 -->
    <bean id="txDefinition" class="org.springframework.transaction.support.DefaultTransactionDefinition"/>
    
	<bean id="mapperScannerConfigurer" class="org.mybatis.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="basePackage" value="com.ontheroad.mysql" />
	</bean>
</beans>
